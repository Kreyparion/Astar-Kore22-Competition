from multiprocessing.dummy import Array
import numpy as np

a = [[[0, 0, 20, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 20, 0, 0], [0, 0, 0, 0, 0, 0, 11, 54, 0, 0, 0, 0, 0, 54, 11, 0, 0, 0, 0, 0, 0], [20, 0, 14, 0, 0, 16, 0, 19, 0, 0, 0, 0, 0, 19, 0, 16, 0, 0, 14, 0, 20], [0, 0, 0, 16, 0, 0, 1, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 16, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 16, 0, 0, 0, 0, 1, 38, 0, 0, 0, 38, 1, 0, 0, 0, 0, 16, 0, 0], [0, 11, 0, 1, 0, 10, 0, 15, 5, 0, 0, 0, 5, 15, 0, 10, 0, 1, 0, 11, 0], [0, 54, 19, 0, 16, 0, 0, 0, 0, 9, 0, 9, 0, 0, 0, 0, 16, 0, 19, 54, 0], [0, 0, 0, 0, 66, 6, 5, 8, 10, 0, 0, 0, 10, 8, 5, 6, 66, 0, 0, 0, 0], [3, 0, 0, 30, 11, 2, 0, 0, 0, 13, 51, 13, 0, 0, 0, 2, 11, 30, 0, 0, 3], [0, 0, 0, 3, 21, 17, 5, 14, 0, 4, 0, 4, 0, 14, 5, 17, 21, 3, 0, 0, 0], [3, 0, 0, 30, 11, 2, 0, 0, 0, 13, 51, 13, 0, 0, 0, 2, 11, 30, 0, 0, 3], [0, 0, 0, 0, 66, 6, 5, 8, 10, 0, 0, 0, 10, 8, 5, 6, 66, 0, 0, 0, 0], [0, 54, 19, 0, 16, 0, 0, 0, 0, 9, 0, 9, 0, 0, 0, 0, 16, 0, 19, 54, 0], [0, 11, 0, 1, 0, 10, 0, 15, 5, 0, 0, 0, 5, 15, 0, 10, 0, 1, 0, 11, 0], [0, 0, 16, 0, 0, 0, 0, 1, 38, 0, 0, 0, 38, 1, 0, 0, 0, 0, 16, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 16, 0, 0, 1, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 16, 0, 0, 0], [20, 0, 14, 0, 0, 16, 0, 19, 0, 0, 0, 0, 0, 19, 0, 16, 0, 0, 14, 0, 20], [0, 0, 0, 0, 0, 0, 11, 54, 0, 0, 0, 0, 0, 54, 11, 0, 0, 0, 0, 0, 0], [0, 0, 20, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 20, 0, 0]] for _ in range(40)]
a = np.array(a)
for i in range(len(a)):
    a[i] = a[i] * (1.02**i)

dimin = 1
cc = -0.15 * dimin
cd = -1.15 * dimin
ld = -0.5 * dimin
c = -0.8 * dimin
d = 3.33 * dimin
dd = 1.3 * dimin
ratio = 3.4/10

filter_wild = [[cc,ld,dd,ld,cc],
          [ld,cd,d,cd,ld],
          [dd,d,c,d,dd],
          [ld,cd,d,cd,ld],
          [cc,ld,dd,ld,cc]]

filter = np.array(filter_wild)

def conv(a,filter):
    shape = a.shape()
    size = shape[1]
    for i in range(len(shape[0])-1,-1,-1):
        for j in range(len(shape[1]])):
            for k in range(len(shape[2])):
                mat1 = a[i+2,(j-2)%size:(j+3)%size,k-2,k+3]
                mat1[0,-1:-2,]
    
